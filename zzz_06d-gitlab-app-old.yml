# -- Gitlab should be installed in it's own namespace, so when it becomes a multi-container group, it'll be isolated
apiVersion: v1
kind: Namespace
metadata:
  name: gitlab
---

# -- Gitlab Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-init-config
  namespace: gitlab
data:
  gitlab.rb: |
    # Add any other gitlab.rb configuration here, each on its own line
    # external_url 'https://git.antimatter-studios.com'
    # Setting up a password for the root account
    gitlab_rails['initial_root_password'] = '09nv53%Â£$BN90n83rv823n'
    # Setting up the config for postgres
    postgresql['enable'] = false
    gitlab_rails['db_database'] = 'postgres'
    gitlab_rails['db_adapter'] = 'postgresql'
    gitlab_rails['db_encoding'] = 'utf8'
    gitlab_rails['db_host'] = '127.0.01'
    gitlab_rails['db_port'] = '5432'
    gitlab_rails['db_username'] = 'postgres'
    gitlab_rails['db_password'] = 'postgres'
    # Setting up the config for redis
    redis['enable'] = false
    gitlab_rails['redis_host'] = '127.0.0.1'
    gitlab_rails['redis_port'] = 6379
    # ssh_port=XXXX
---

# -- Persistent Volume Claim for the gitlab configuration
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-config
  namespace: gitlab
spec:
  #persistentVolumeReclaimPolicy: Retain
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---

# -- Persistent Volume Claim for the gitlab logs
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-logs
  namespace: gitlab
spec:
  #persistentVolumeReclaimPolicy: Retain
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---

# -- Persistent Volume Claim for the gitlab data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-data
  namespace: gitlab
spec:
  #persistentVolumeReclaimPolicy: Retain
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---

# -- Persistent Volume Claim for the gitlab postgres database
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-postgres
  namespace: gitlab
spec:
  #persistentVolumeReclaimPolicy: Retain
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---

# -- Deployment of the docker container
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: gitlab
  namespace: gitlab
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: gitlab
    spec:
      initContainers:
        - name: init-gitlab
          image: busybox
          command: ["sh","-c","cp /mnt/init-config/gitlab.rb /mnt/gitlab-config"]
          volumeMounts:
            - name: init-config
              mountPath: /mnt/init-config
            - name: config
              mountPath: /mnt/gitlab-config

      containers:
        - name: gitlab
          image: gitlab/gitlab-ce:10.2.8-ce.0
          volumeMounts:
            - name: config
              mountPath: /etc/gitlab
            - name: logs
              mountPath: /var/log/gitlab
            - name: data
              mountPath: /var/opt/gitlab
          ports:
            - containerPort: 80
              name: http
            - containerPort: 443
              name: https
            - containerPort: 22
              name: ssh

        - name: postgres
          image: postgres:10-alpine
          volumeMounts:
            - name: postgres
              mountPath: /var/lib/postgres/data
          env:
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_DB
              value: postgres
            - name: PGDATA
              value: /var/lig/postgresql/data/pgdata

        - name: redis
          image: redis:4.0.7-alpine

      volumes:
        - name: init-config
          configMap:
            name: gitlab-init-config
        - name: config
          persistentVolumeClaim:
            claimName: gitlab-config
        - name: logs
          persistentVolumeClaim:
            claimName: gitlab-logs
        - name: data
          persistentVolumeClaim:
            claimName: gitlab-data
        - name: postgres
          persistentVolumeClaim:
            claimName: gitlab-postgres
---

# -- Service for the Ingress to target
apiVersion: v1
kind: Service
metadata:
  name: gitlab
  namespace: gitlab
spec:
  selector:
    app: gitlab
  ports:
    - port: 80
      targetPort: 80
      name: http
    - port: 443
      targetPort: 443
      name: https
    - port: 22
      targetPort: 22
      name: ssh
---

# -- Ingress configuration for Gitlab
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gitlab
  namespace: gitlab
  annotations:
    ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: git.antimatter-studios.com
      http:
        paths:
          - backend:
              serviceName: gitlab
              servicePort: 80